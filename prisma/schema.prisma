// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(STUDENT)
  classId       String?
  accounts      Account[]
  sessions      Session[]
  class         Class?    @relation(fields: [classId], references: [id])
  teacherClasses Class[]  @relation("TeacherClass")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Class {
  id          String     @id @default(cuid())
  name        String     @unique // 5-А, 6-Б, тощо
  description String?
  teacherId   String?
  teacher     User?      @relation("TeacherClass", fields: [teacherId], references: [id])
  students    User[]
  lessons     Lesson[]
  schedules   Schedule[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Subject {
  id        String   @id @default(cuid())
  name      String   @unique // Математика, Українська мова, тощо
  lessons   Lesson[]
  schedules Schedule[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Lesson {
  id          String   @id @default(cuid())
  title       String
  description String?
  content     String?
  classId     String
  subjectId   String
  date        DateTime
  duration    Int      @default(45) // тривалість в хвилинах
  class       Class    @relation(fields: [classId], references: [id])
  subject     Subject  @relation(fields: [subjectId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Schedule {
  id         String    @id @default(cuid())
  classId    String
  subjectId  String
  dayOfWeek  Int       // 0-6 (неділя-субота)
  startTime  String    // "08:00"
  endTime    String    // "08:45"
  class      Class     @relation(fields: [classId], references: [id])
  subject    Subject   @relation(fields: [subjectId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@unique([classId, dayOfWeek, startTime])
}

enum Role {
  STUDENT
  TEACHER
  ADMIN
}
